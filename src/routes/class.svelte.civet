// src/routes/class.svelte.civet
type classSchema = {
  count: number;
  lastTimePressed?: Date | null;
  hasBeenPressed: boolean;
}


/* A class to track button press state using Svelte 5 runes */
export class ImportedClass23 implements classSchema {
	// Track the number of times the button was pressed
	count = $state<number>(0);
	lastTimePressed = $state<Date | null>(null);
	hasBeenPressed = $state<boolean>(false);

	constructor(initialCount: number = 0) {
		this.count = initialCount;
	}

	/* Increment the press count and update the last pressed timestamp */
	press(): void {
		this.count++;
		this.lastTimePressed = new Date();
		this.hasBeenPressed = true;
	}

	/* Reset the counter back to zero */
	reset(): void {
		this.count = 0;
		this.lastTimePressed = new Date();
	}

	/* Get a formatted message about the button state */
	getMessage(): string {
		if (!this.hasBeenPressed) {
			return 'Button has not been pressed yet';
		}

		return `Button pressed ${this.count} time${this.count === 1 ? '' : 's'}`;
	}

	/* Get a formatted timestamp of when the button was last pressed */
	getLastTimePressedTime(): string {
		if (!this.lastTimePressed) {
			return 'Never pressed';
		}

		return this.lastTimePressed.toLocaleString();
	}

	hello() {
		return 'Hello from Svelte!';
	}
}
